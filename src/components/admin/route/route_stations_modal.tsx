import type { RouteStationsEntity } from '../../../models/entity/route_entity';

interface RouteStationsModalProps {
    routeStations: RouteStationsEntity;
    onClose: () => void;
}

/**
 * # Á∫øË∑ØÁ´ôÁÇπÊ®°ÊÄÅÊ°ÜÁªÑ‰ª∂
 * Áî®‰∫éÊòæÁ§∫Á∫øË∑ØÁöÑÁ´ôÁÇπÂàóË°®
 */
export function RouteStationsModal({ routeStations, onClose }: RouteStationsModalProps) {
    /**
     * Ê†ºÂºèÂåñË∑ùÁ¶ª
     */
    const formatDistance = (distance: number) => {
        return `${distance.toFixed(1)} km`;
    };

    /**
     * Ê†ºÂºèÂåñÊó∂Èó¥
     */
    const formatTime = (minutes: number) => {
        return `${minutes} ÂàÜÈíü`;
    };

    const stations = routeStations.stations.sort((a, b) => a.sequence - b.sequence);
    const totalDistance = stations.length > 0 ? Math.max(...stations.map(s => s.distance_from_start)) : 0;
    const totalTime = stations.length > 0 ? Math.max(...stations.map(s => s.estimated_time)) : 0;

    return (
        <div className="modal modal-open">
            <div className="modal-box w-11/12 max-w-6xl max-h-[90vh] overflow-y-auto">
                {/* Â§¥ÈÉ® */}
                <div className="flex items-center justify-between mb-6 sticky top-0 bg-base-100 pt-4">
                    <div>
                        <h3 className="text-xl font-bold">Á∫øË∑ØÁ´ôÁÇπ‰ø°ÊÅØ</h3>
                        <div className="flex items-center space-x-3 mt-2">
                            <span className="badge badge-primary badge-lg">
                                {stations.length} ‰∏™Á´ôÁÇπ
                            </span>
                            <span className="badge badge-success badge-outline">
                                ÊÄªË∑ùÁ¶ª: {formatDistance(totalDistance)}
                            </span>
                            <span className="badge badge-warning badge-outline">
                                ÊÄªÁî®Êó∂: {formatTime(totalTime)}
                            </span>
                        </div>
                    </div>
                    <button className="btn btn-sm btn-circle btn-ghost" onClick={onClose}>‚úï</button>
                </div>

                {/* Á©∫Áä∂ÊÄÅ */}
                {stations.length === 0 ? (
                    <div className="text-center py-12">
                        <div className="text-6xl mb-4">üöè</div>
                        <h4 className="text-lg font-semibold mb-2">ËØ•Á∫øË∑ØÊöÇÊó†Á´ôÁÇπ‰ø°ÊÅØ</h4>
                        <p className="text-base-content/60">ËØ∑ËÅîÁ≥ªÁÆ°ÁêÜÂëòÊ∑ªÂä†Á´ôÁÇπ‰ø°ÊÅØ</p>
                    </div>
                ) : (
                    <>
                        {/* Á´ôÁÇπÂàóË°® */}
                        <div className="space-y-3">
                            {stations.map((station, index) => (
                                <div key={station.route_station_uuid} className="card bg-base-200 shadow-sm">
                                    <div className="card-body p-4">
                                        <div className="flex items-center justify-between">
                                            <div className="flex items-center gap-4">
                                                <div className="badge badge-primary badge-lg">
                                                    Á¨¨ {station.sequence} Á´ô
                                                </div>
                                                <div>
                                                    <h5 className="font-bold text-lg">{station.name}</h5>
                                                    <p className="text-sm text-base-content/70">{station.code || 'ÊöÇÊó†ÁºñÁ†Å'}</p>
                                                </div>
                                            </div>
                                            
                                            <div className="flex gap-2">
                                                <div className="badge badge-outline">
                                                    {formatDistance(station.distance_from_start)}
                                                </div>
                                                <div className="badge badge-info badge-outline">
                                                    {formatTime(station.estimated_time)}
                                                </div>
                                            </div>
                                        </div>
                                        
                                        {/* Á´ôÁÇπËØ¶ÁªÜ‰ø°ÊÅØ */}
                                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-3 pt-3 border-t border-base-300">
                                            <div>
                                                <span className="text-sm font-medium text-base-content/70">Á´ôÁÇπÂú∞ÂùÄ:</span>
                                                <p className="text-sm mt-1">{station.address || 'ÊöÇÊó†Âú∞ÂùÄ‰ø°ÊÅØ'}</p>
                                            </div>
                                            <div>
                                                <span className="text-sm font-medium text-base-content/70">ÂùêÊ†á‰ΩçÁΩÆ:</span>
                                                <p className="text-xs font-mono mt-1">
                                                    ÁªèÂ∫¶: {station.longitude.toFixed(6)}<br />
                                                    Á∫¨Â∫¶: {station.latitude.toFixed(6)}
                                                </p>
                                            </div>
                                        </div>
                                        
                                        {/* ËøûÊé•Á∫ø */}
                                        {index < stations.length - 1 && (
                                            <div className="flex justify-center mt-2">
                                                <div className="text-2xl text-primary">‚Üì</div>
                                            </div>
                                        )}
                                    </div>
                                </div>
                            ))}
                        </div>

                        {/* ÁªüËÆ°‰ø°ÊÅØÂç°Áâá */}
                        <div className="mt-8 grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div className="stat bg-gradient-to-r from-primary/10 to-primary/5 rounded-lg border border-primary/20">
                                <div className="stat-figure text-primary">
                                    <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                                        <path fillRule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clipRule="evenodd" />
                                    </svg>
                                </div>
                                <div className="stat-title">ÊÄªÁ´ôÁÇπÊï∞</div>
                                <div className="stat-value text-primary">{stations.length}</div>
                                <div className="stat-desc">‰∏™ÂÅúÈù†Á´ôÁÇπ</div>
                            </div>
                            
                            <div className="stat bg-gradient-to-r from-success/10 to-success/5 rounded-lg border border-success/20">
                                <div className="stat-figure text-success">
                                    <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                                        <path fillRule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clipRule="evenodd" />
                                    </svg>
                                </div>
                                <div className="stat-title">ÊÄªË∑ùÁ¶ª</div>
                                <div className="stat-value text-success">{formatDistance(totalDistance)}</div>
                                <div className="stat-desc">Á∫øË∑ØÂÖ®Èïø</div>
                            </div>
                            
                            <div className="stat bg-gradient-to-r from-warning/10 to-warning/5 rounded-lg border border-warning/20">
                                <div className="stat-figure text-warning">
                                    <svg className="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                                        <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clipRule="evenodd" />
                                    </svg>
                                </div>
                                <div className="stat-title">ÊÄªÁî®Êó∂</div>
                                <div className="stat-value text-warning">{formatTime(totalTime)}</div>
                                <div className="stat-desc">È¢ÑËÆ°Ë°åÁ®ãÊó∂Èó¥</div>
                            </div>
                        </div>
                    </>
                )}

                {/* Â∫ïÈÉ®ÊåâÈíÆ */}
                <div className="modal-action sticky bottom-0 bg-base-100 pt-4">
                    <button className="btn btn-primary" onClick={onClose}>
                        ÂÖ≥Èó≠
                    </button>
                </div>
            </div>
        </div>
    );
} 